.tampil {
  color: white;
  text-align: center;
  margin: 20px auto;  
  border-collapse: collapse; 
}

.tampil th, 
.tampil td {
  border: 1px solid white; 
  padding: 8px 12px;     
}

.tampil th {
  background-color: rgba(255, 255, 255, 0.1); 
}


/* From Uiverse.io by milegelu */ 
.container {
  width: 100%;
  height: 100%;

  background: #000000;
  --gap: 5em;
  --line: 1px;
  --color: rgba(255, 255, 255, 0.2);

  background-image: linear-gradient(
      -90deg,
      transparent calc(var(--gap) - var(--line)),
      var(--color) calc(var(--gap) - var(--line) + 1px),
      var(--color) var(--gap)
    ),
    linear-gradient(
      0deg,
      transparent calc(var(--gap) - var(--line)),
      var(--color) calc(var(--gap) - var(--line) + 1px),
      var(--color) var(--gap)
    );
  background-size: var(--gap) var(--gap);
}

.glitch-form-wrapper {
  --bg-color: #0d0d0d;
  --primary-color: #00f2ea;
  --secondary-color: #a855f7;
  --text-color: #e5e5e5;
  --font-family: "Fira Code", Consolas, "Courier New", Courier, monospace;
  --glitch-anim-duration: 0.5s;
}

.glitch-form-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: var(--font-family);
  background-color: #050505;
}

/* --- Card Structure --- */
.glitch-card {
  background-color: var(--bg-color);
  width: 100%;
  max-width: 380px;
  border: 1px solid rgba(0, 242, 234, 0.2);
  box-shadow:
    0 0 20px rgba(0, 242, 234, 0.1),
    inset 0 0 10px rgba(0, 0, 0, 0.5);
  overflow: hidden;
  margin: 1rem;
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.3);
  padding: 0.5em 1em;
  border-bottom: 1px solid rgba(0, 242, 234, 0.2);
}

.card-title {
  color: var(--primary-color);
  font-size: 0.8rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  display: flex;
  align-items: center;
  gap: 0.5em;
}

.card-title svg {
  width: 1.2em;
  height: 1.2em;
  stroke: var(--primary-color);
}

.card-dots span {
  display: inline-block;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: #333;
  margin-left: 5px;
}

.card-body {
  padding: 1.5rem;
}

/* --- Form Elements --- */
.form-group {
  position: relative;
  margin-bottom: 1.5rem;
}

.form-label {
  position: absolute;
  top: 0.75em;
  left: 0;
  font-size: 1rem;
  color: var(--primary-color);
  opacity: 0.6;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  pointer-events: none;
  transition: all 0.3s ease;
}

.form-group select {
  width: 100%;
  padding: 10px 0;
  font-size: 1rem;
  color: var(--primary-color);
  margin-bottom: 30px;
  border: none;
  border-bottom: 1px var(--primary-color);
  outline: none;
  background: transparent;

}

.form-group option {
  position: absolute;
  top: 0.75em;
  left: 0;
  font-size: 1rem;
  color: var(--primary-color);
  opacity: 0.6;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  pointer-events: none;
  transition: all 0.3s ease;
}

.form-group input {
  width: 100%;
  background: transparent;
  border: none;
  border-bottom: 2px solid rgba(0, 242, 234, 0.3);
  padding: 0.75em 0;
  font-size: 1rem;
  color: var(--text-color);
  font-family: inherit;
  outline: none;
  transition: border-color 0.3s ease;
}

.form-group input:focus {
  border-color: var(--primary-color);
}

.form-group input:focus + .form-label,
.form-group input:not(:placeholder-shown) + .form-label {
  top: -1.2em;
  font-size: 0.8rem;
  opacity: 1;
}

.form-group input:focus + .form-label::before,
.form-group input:focus + .form-label::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--bg-color);
}

.form-group input:focus + .form-label::before {
  color: var(--secondary-color);
  animation: glitch-anim var(--glitch-anim-duration)
    cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

.form-group input:focus + .form-label::after {
  color: var(--primary-color);
  animation: glitch-anim var(--glitch-anim-duration)
    cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both;
}

@keyframes glitch-anim {
  0% {
    transform: translate(0);
    clip-path: inset(0 0 0 0);
  }
  20% {
    transform: translate(-5px, 3px);
    clip-path: inset(50% 0 20% 0);
  }
  40% {
    transform: translate(3px, -2px);
    clip-path: inset(20% 0 60% 0);
  }
  60% {
    transform: translate(-4px, 2px);
    clip-path: inset(80% 0 5% 0);
  }
  80% {
    transform: translate(4px, -3px);
    clip-path: inset(30% 0 45% 0);
  }
  100% {
    transform: translate(0);
    clip-path: inset(0 0 0 0);
  }
}

/* --- Button Styling --- */
.submit-btn {
  width: 100%;
  padding: 0.8em;
  margin-top: 1rem;
  background-color: transparent;
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
  font-family: inherit;
  font-size: 1rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.2em;
  cursor: pointer;
  position: relative;
  transition: all 0.3s;
  overflow: hidden;
}

.submit-btn:hover,
.submit-btn:focus {
  background-color: var(--primary-color);
  color: var(--bg-color);
  box-shadow: 0 0 25px var(--primary-color);
  outline: none;
}

.submit-btn:active {
  transform: scale(0.97);
}

/* --- Glitch Effect for Button --- */
.submit-btn .btn-text {
  position: relative;
  z-index: 1;
  transition: opacity 0.2s ease;
}

.submit-btn:hover .btn-text {
  opacity: 0;
}

.submit-btn::before,
.submit-btn::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  background-color: var(--primary-color);
  transition: opacity 0.2s ease;
}

.submit-btn:hover::before,
.submit-btn:focus::before {
  opacity: 1;
  color: var(--secondary-color);
  animation: glitch-anim var(--glitch-anim-duration)
    cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

.submit-btn:hover::after,
.submit-btn:focus::after {
  opacity: 1;
  color: var(--bg-color);
  animation: glitch-anim var(--glitch-anim-duration)
    cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both;
}

@media (prefers-reduced-motion: reduce) {
  .form-group input:focus + .form-label::before,
  .form-group input:focus + .form-label::after,
  .submit-btn:hover::before,
  .submit-btn:focus::before,
  .submit-btn:hover::after,
  .submit-btn:focus::after {
    animation: none;
    opacity: 0;
  }

  .submit-btn:hover .btn-text {
    opacity: 1;
  }
}

/* From Uiverse.io by pharmacist-sabot */ 
/* --- Root Variables & Wrapper --- */
.glitch-radio-wrapper {
  --bg-color: #0d0d0d;
  --primary-color: #00f2ea;
  --secondary-color: #a855f7;
  --text-color: #e5e5e5;
  --disabled-color: #555;
  --font-family: "Fira Code", Consolas, "Courier New", Courier, monospace;
  --glitch-anim-duration: 0.4s;

  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  font-family: var(--font-family);
  background-color: #050505;
  padding: 2rem;
  border-radius: 1rem;
}

/* --- Radio Container --- */
.glitch-radio-container {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  cursor: pointer;
  user-select: none;
  position: relative;
}

.glitch-radio-container input[type="radio"] {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

/* --- Radio Circle Visual --- */
.radio-circle {
  width: 1.5em;
  height: 1.5em;
  border: 2px solid var(--primary-color);
  border-radius: 50%;
  position: relative;
  transition: all 0.3s ease;
  display: flex;
  justify-content: center;
  align-items: center;
}

.radio-dot {
  width: 60%;
  height: 60%;
  background-color: var(--primary-color);
  border-radius: 50%;
  transform: scale(0);
  opacity: 0;
  transition: all 0.3s cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.radio-label {
  color: var(--text-color);
  font-weight: 500;
  font-size: 1rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  position: relative;
}

/* --- Pulse Element --- */
.pulse {
  position: absolute;
  inset: 0;
  border: 2px solid var(--primary-color);
  border-radius: 50%;
  opacity: 0;
}

/* --- Checked State --- */
.glitch-radio-container input:checked + .radio-circle .radio-dot {
  transform: scale(1);
  opacity: 1;
}

.glitch-radio-container input:checked ~ .radio-label {
  color: var(--primary-color);
  text-shadow: 0 0 8px rgba(0, 242, 234, 0.7);
}

.glitch-radio-container input:checked + .radio-circle .pulse {
  animation: pulse-wave 1.2s cubic-bezier(0, 0, 0.2, 1) infinite;
  animation-delay: var(--d);
}

/* --- Hover State --- */
.glitch-radio-container:hover .radio-circle {
  box-shadow: 0 0 10px var(--primary-color);
}

.glitch-radio-container:hover .radio-label::before,
.glitch-radio-container:hover .radio-label::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #050505;
}

.glitch-radio-container:hover .radio-label::before {
  color: var(--secondary-color);
  animation: glitch-anim-text var(--glitch-anim-duration)
    cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

.glitch-radio-container:hover .radio-label::after {
  color: var(--primary-color);
  animation: glitch-anim-text var(--glitch-anim-duration)
    cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both;
}

/* --- Disabled State --- */
.glitch-radio-container:has(input:disabled) {
  cursor: not-allowed;
}
.glitch-radio-container input:disabled + .radio-circle {
  border-color: var(--disabled-color);
  opacity: 0.5;
}
.glitch-radio-container input:disabled ~ .radio-label {
  color: var(--disabled-color);
}
.glitch-radio-container:has(input:disabled):hover .radio-circle {
  box-shadow: none;
}
.glitch-radio-container:has(input:disabled):hover .radio-label::before,
.glitch-radio-container:has(input:disabled):hover .radio-label::after {
  content: none;
}

/* Keyframes */
@keyframes glitch-anim-text {
  0% {
    transform: translate(0);
    clip-path: inset(0 0 0 0);
  }
  20% {
    transform: translate(-3px, 2px);
    clip-path: inset(50% 0 20% 0);
  }
  40% {
    transform: translate(2px, -1px);
    clip-path: inset(20% 0 60% 0);
  }
  60% {
    transform: translate(-2px, 1px);
    clip-path: inset(80% 0 5% 0);
  }
  80% {
    transform: translate(2px, -2px);
    clip-path: inset(30% 0 45% 0);
  }
  100% {
    transform: translate(0);
    clip-path: inset(0 0 0 0);
  }
}

/* Keyframes for Pulse Wave */
@keyframes pulse-wave {
  from {
    transform: scale(1);
    opacity: 0.7;
  }
  to {
    transform: scale(2.5);
    opacity: 0;
  }
}

/* From Uiverse.io by pharmacist-sabot */ 
/* --- Root Variables & Wrapper --- */
.glitch-checkbox-wrapper {
  --bg-color: #0d0d0d;
  --primary-color: #00f2ea;
  --secondary-color: #a855f7;
  --text-color: #e5e5e5;
  --disabled-color: #555;
  --font-family: "Fira Code", Consolas, "Courier New", Courier, monospace;
  --glitch-anim-duration: 0.3s;

  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  font-family: var(--font-family);
  background-color: #050505;
  padding: 2rem;
  border-radius: 1rem;
}

/* --- Container Checkbox --- */
.glitch-checkbox-container {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  cursor: pointer;
  user-select: none;
  position: relative;
}

.glitch-checkbox-container input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

/* --- Checkbox --- */
.checkbox-box {
  width: 1.5em;
  height: 1.5em;
  border: 2px solid var(--primary-color);
  position: relative;
  transition: all 0.3s ease;

  clip-path: polygon(
    15% 0,
    85% 0,
    100% 15%,
    100% 85%,
    85% 100%,
    15% 100%,
    0 85%,
    0 15%
  );
}

.checkbox-mark {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 60%;
  height: 60%;
  background-color: var(--primary-color);
  transform: translate(-50%, -50%) scale(0);
  opacity: 0;
  transition: all 0.3s cubic-bezier(0.18, 0.89, 0.32, 1.28);
  clip-path: inherit;
}

/* --- Label --- */
.checkbox-label {
  color: var(--text-color);
  font-weight: 500;
  font-size: 1rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  position: relative;
  transition:
    color 0.3s ease,
    text-shadow 0.3s ease;
}

/* --- Checked --- */
.glitch-checkbox-container input:checked + .checkbox-box .checkbox-mark {
  transform: translate(-50%, -50%) scale(1);
  opacity: 1;
  animation: glitch-anim-checkbox var(--glitch-anim-duration) both;
}

.glitch-checkbox-container input:checked ~ .checkbox-label {
  color: var(--primary-color);
  text-shadow: 0 0 8px rgba(0, 242, 234, 0.7);
}

/* --- Hover --- */
.glitch-checkbox-container:hover .checkbox-box {
  box-shadow: 0 0 10px var(--primary-color);
}

.glitch-checkbox-container:hover .checkbox-label::before,
.glitch-checkbox-container:hover .checkbox-label::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #050505;
}

.glitch-checkbox-container:hover .checkbox-label::before {
  color: var(--secondary-color);
  animation: glitch-anim-text var(--glitch-anim-duration)
    cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

.glitch-checkbox-container:hover .checkbox-label::after {
  color: var(--primary-color);
  animation: glitch-anim-text var(--glitch-anim-duration)
    cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both;
}

/* ---  Disabled --- */
.glitch-checkbox-container:has(input:disabled) {
  cursor: not-allowed;
}

.glitch-checkbox-container input:disabled + .checkbox-box {
  border-color: var(--disabled-color);
  opacity: 0.5;
  box-shadow: none;
}

.glitch-checkbox-container input:disabled ~ .checkbox-label {
  color: var(--disabled-color);
  text-shadow: none;
}

.glitch-checkbox-container:has(input:disabled):hover .checkbox-box {
  box-shadow: none;
}
.glitch-checkbox-container:has(input:disabled):hover .checkbox-label::before,
.glitch-checkbox-container:has(input:disabled):hover .checkbox-label::after {
  content: none;
}

/* --- Keyframes --- */
@keyframes glitch-anim-checkbox {
  0% {
    transform: translate(-50%, -50%);
    clip-path: inset(0 0 0 0);
  }
  20% {
    transform: translate(calc(-50% - 3px), calc(-50% + 2px));
    clip-path: inset(50% 0 20% 0);
  }
  40% {
    transform: translate(calc(-50% + 2px), calc(-50% - 1px));
    clip-path: inset(20% 0 60% 0);
  }
  60% {
    transform: translate(calc(-50% - 2px), calc(-50% + 1px));
    clip-path: inset(80% 0 5% 0);
  }
  80% {
    transform: translate(calc(-50% + 2px), calc(-50% - 2px));
    clip-path: inset(30% 0 45% 0);
  }
  100% {
    transform: translate(-50%, -50%);
    clip-path: inset(0 0 0 0);
  }
}

@keyframes glitch-anim-text {
  0% {
    transform: translate(0);
    clip-path: inset(0 0 0 0);
  }
  20% {
    transform: translate(-3px, 2px);
    clip-path: inset(50% 0 20% 0);
  }
  40% {
    transform: translate(2px, -1px);
    clip-path: inset(20% 0 60% 0);
  }
  60% {
    transform: translate(-2px, 1px);
    clip-path: inset(80% 0 5% 0);
  }
  80% {
    transform: translate(2px, -2px);
    clip-path: inset(30% 0 45% 0);
  }
  100% {
    transform: translate(0);
    clip-path: inset(0 0 0 0);
  }
}

/* From Uiverse.io by pharmacist-sabot */ 
/* --- Root Variables & Wrapper --- */
.glitch-input-wrapper {
  --bg-color: #0d0d0d;
  --primary-color: #00f2ea;
  --secondary-color: #a855f7;
  --text-color: #e5e5e5;
  --font-family: "Fira Code", Consolas, "Courier New", Courier, monospace;
  --glitch-anim-duration: 0.4s;

  display: flex;
  justify-content: center;
  align-items: center;
  font-family: var(--font-family);
  font-size: 16px;
  padding: 3rem;
}

/* --- Container  --- */
.input-container {
  position: relative;
  width: 19rem;
}

/* --- Input --- */
.holo-input {
  width: 100%;
  height: 3.5rem;
  background: rgba(13, 13, 13, 0.7);
  border: none;
  border-bottom: 2px solid #333;
  outline: none;
  color: var(--primary-color);
  font-family: inherit;
  font-size: 1.1rem;
  caret-color: var(--primary-color);
  z-index: 10;
  transition:
    background 0.3s ease,
    border-color 0.3s ease;
}

/* --- Floating Label --- */
.input-label {
  position: absolute;
  top: 1rem;
  left: 1rem;
  color: var(--text-color);
  opacity: 0.6;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  pointer-events: none;
  transition: all 0.3s ease;
  z-index: 11;
}
.holo-input:focus + .input-label,
.holo-input:not(:placeholder-shown) + .input-label {
  top: -1.5rem;
  left: 0;
  font-size: 0.8rem;
  opacity: 1;
  color: var(--primary-color);
}

.holo-input:focus + .input-label::before,
.holo-input:focus + .input-label::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #212121;
}
.holo-input:focus + .input-label::before {
  color: var(--secondary-color);
  animation: glitch-label var(--glitch-anim-duration)
    cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}
.holo-input:focus + .input-label::after {
  color: var(--primary-color);
  animation: glitch-label var(--glitch-anim-duration)
    cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both;
}

/* --- Decorative Layers --- */
.input-border,
.input-scanline,
.input-glow,
.input-corners {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}
.input-border {
  border: 1px solid rgba(0, 242, 234, 0.2);
  opacity: 0.5;
  transition: all 0.3s ease;
}
.corner {
  position: absolute;
  width: 1rem;
  height: 1rem;
  border: 2px solid var(--primary-color);
  transition: all 0.3s ease;
  opacity: 0.5;
}
.corner-tl {
  top: -0.3rem;
  left: -0.3rem;
  border-right: none;
  border-bottom: none;
}
.corner-tr {
  top: -0.3rem;
  right: -0.3rem;
  border-left: none;
  border-bottom: none;
}
.corner-bl {
  bottom: -0.3rem;
  left: -0.3rem;
  border-right: none;
  border-top: none;
}
.corner-br {
  bottom: -0.3rem;
  right: -0.3rem;
  border-left: none;
  border-top: none;
}

.input-glow {
  background: radial-gradient(
    ellipse at center,
    rgba(0, 242, 234, 0.2) 0%,
    transparent 70%
  );
  opacity: 0;
  transition: opacity 0.4s ease;
}

.input-scanline {
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    rgba(0, 242, 234, 0.1) 48%,
    rgba(0, 242, 234, 0.3) 50%,
    rgba(0, 242, 234, 0.1) 52%,
    transparent 100%
  );
  opacity: 0;
}

/* --- Data Visualization --- */
.input-data-stream {
  position: absolute;
  bottom: 2px;
  left: 0;
  width: 100%;
  height: 0.3rem;
  display: flex;
  opacity: 0;
  transition: opacity 0.3s ease 0.1s;
}
.stream-bar {
  flex-grow: 1;
  background-color: var(--primary-color);
  transition:
    transform 0.2s,
    opacity 0.2s;
  transform: scaleY(0);
  transform-origin: bottom;
}

.holo-input:focus {
  border-color: transparent;
}
.holo-input:focus ~ .input-border {
  opacity: 1;
  border-color: rgba(0, 242, 234, 0.5);
}
.holo-input:focus ~ .input-corners .corner {
  width: 1.25rem;
  height: 1.25rem;
  border-width: 3px;
  opacity: 1;
}
.holo-input:focus ~ .input-glow {
  opacity: 1;
}
.holo-input:focus ~ .input-scanline {
  animation: scan-vertical 4s linear infinite;
}
.holo-input:focus ~ .input-data-stream {
  opacity: 1;
}
.holo-input:focus ~ .input-data-stream .stream-bar {
  animation: data-pulse 2s infinite;
  animation-delay: calc(var(--i) * 0.1s);
}

/* --- Keyframes --- */
@keyframes glitch-label {
  0% {
    transform: translate(0);
    clip-path: inset(0 0 0 0);
  }
  20% {
    transform: translate(-0.2rem, 0.1rem);
    clip-path: inset(50% 0 20% 0);
  }
  40% {
    transform: translate(0.1rem, -0.1rem);
    clip-path: inset(20% 0 60% 0);
  }
  60% {
    transform: translate(-0.15rem, 0.1rem);
    clip-path: inset(80% 0 5% 0);
  }
  80% {
    transform: translate(0.15rem, -0.15rem);
    clip-path: inset(30% 0 45% 0);
  }
  100% {
    transform: translate(0);
    clip-path: inset(0 0 0 0);
  }
}

@keyframes scan-vertical {
  0% {
    opacity: 0;
    transform: translateY(-100%);
  }
  25% {
    opacity: 0.5;
  }
  75% {
    opacity: 0.5;
  }
  100% {
    opacity: 0;
    transform: translateY(100%);
  }
}

@keyframes data-pulse {
  0%,
  100% {
    transform: scaleY(0.2);
    opacity: 0.3;
  }
  50% {
    transform: scaleY(1);
    opacity: 0.8;
  }
}
